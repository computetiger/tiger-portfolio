[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "HOME",
    "section": "",
    "text": "Hi, I’m Jiwon Choi\nCompute Tiger.\n====================================\n\n\npython \nRstudio\n\n\n\n\nADSP\nMOS MASTER\nComputer Specialist in Spreadsheet & Database Level-2\n\n\n\nText Mining"
  },
  {
    "objectID": "index.html#this-is-a-first-page-in-my-homepage",
    "href": "index.html#this-is-a-first-page-in-my-homepage",
    "title": "INFO",
    "section": "",
    "text": "Hi, I’m Jiwon Choi\nCompute Tiger.\n====================================\nMy GitHub\n[GitHub]:https://github.com/computetiger\n\nContact\n-e-mail: bereno6@hanyang.ac.kr\n\n\n\npython \nRstudio\n\n\n\n\nADSP\nMOS MASTER\nComputer Specialist in Spreadsheet & Database Level-2\n\n\n\nText Mining"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "hw1.html",
    "href": "hw1.html",
    "title": "HW1",
    "section": "",
    "text": "1.(84page)\n\n다음 표의 내용을 데이터 프레임으로 만들어 출력해보세요.\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n\n\ndf1=pd.DataFrame({\n    \"제품\":[\"사과\",\"딸기\",\"수박\"],\n    \"가격\":[1800,1500,3000],\n    \"판매량\":[24,38,13]})\ndf1\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\n\n앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해보세요.\n\nprint(f\"과일 가격 평균:{df1[\"가격\"].mean()}, 과일 판매량 평균:{df1[\"판매량\"].mean()}\")\n\n과일 가격 평균:2100.0, 과일 판매량 평균:25.0\n\n\n\n\n\n2.(115page)\n\nmpg 데이터를 불러와 복사본을 만드세요.\n\ndf2=pd.read_csv('data/mpg.csv')\ndf3=df2.copy()\ndf3.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\n\n데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\ndf3.rename(columns={\"cty\":\"city\",\"hwy\":\"highway\"},inplace=True)\ndf3.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n\n3.(130page)\n\nmidwest.csv를 불러와 데이터의 특징을 파악하세요.\n\ndf4=pd.read_csv('data/midwest.csv')\ndf4.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\n\npoptotal 변수를 total로, popasian 변수를 asian으로 수정하세요.\n\n\ntotal, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nimport matplotlib.pyplot as plt\ndf4.rename(columns={\"poptotal\":\"total\",\"popasian\":\"asian\"},inplace=True)\ndf4['percent']=df4['asian']/df4['total'] *100\ndf4['percent'].plot.hist()\nplt.title(\"Total Population\")\n\ndf4.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\npercent\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n\n\n5 rows × 29 columns\n\n\n\n\n\n\n\n\n\n\n\n\n아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어보세요.\n\nprint(f\"아시아 인구 백분율 전체 평균: {df4['percent'].mean()}\")\ndf4['large_small']=np.where(df4['percent'].mean()&gt;=df4['percent'],\"small\",\"large\")\ndf4.head()\n\n아시아 인구 백분율 전체 평균: 0.4872461834357345\n\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\npercent\nlarge_small\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n\n\n5 rows × 30 columns\n\n\n\n\n\n’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\ndf4_count=df4[\"large_small\"].value_counts()\ndf4_count\n\nlarge_small\nsmall    318\nlarge    119\nName: count, dtype: int64\n\n\n\ndf4_count.plot.bar(rot=0)"
  },
  {
    "objectID": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.84page",
    "href": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.84page",
    "title": "INFO",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np    \ndf1=pd.DataFrame({\n    \"제품\":[\"사과\",\"딸기\",\"수박\"],\n    \"가격\":[1800,1500,3000],\n    \"판매량\":[24,38,13]})\n\n\nprint(f\"과일 가격 평균:{df1[\"가격\"].mean()}, 과일 판매량 평균:{df1[\"판매량\"].mean()}\")\n\n과일 가격 평균:2100.0, 과일 판매량 평균:25.0"
  },
  {
    "objectID": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.115page",
    "href": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.115page",
    "title": "INFO",
    "section": "2.다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.(115page)",
    "text": "2.다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.(115page)\n\ndf2=pd.read_csv('data/mpg.csv')\ndf3=df2.copy()\ndf3.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\ndf3=df3.rename(columns={\"cty\":\"city\",\"hwy\":\"highway\"})\ndf3.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "hw1.html#section",
    "href": "hw1.html#section",
    "title": "INFO",
    "section": "3.",
    "text": "3."
  },
  {
    "objectID": "hw1.html#page",
    "href": "hw1.html#page",
    "title": "INFO",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport seaborn as sns\n\n\ndf1=pd.DataFrame({\n    \"제품\":[\"사과\",\"딸기\",\"수박\"],\n    \"가격\":[1800,1500,3000],\n    \"판매량\":[24,38,13]})\ndf1\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\nprint(f\"과일 가격 평균:{df1[\"가격\"].mean()}, 과일 판매량 평균:{df1[\"판매량\"].mean()}\")\n\n과일 가격 평균:2100.0, 과일 판매량 평균:25.0"
  },
  {
    "objectID": "hw1.html#page-1",
    "href": "hw1.html#page-1",
    "title": "INFO",
    "section": "2.(115page)",
    "text": "2.(115page)\n\ndf2=pd.read_csv('data/mpg.csv')\ndf3=df2.copy()\ndf3.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\ndf3.rename(columns={\"cty\":\"city\",\"hwy\":\"highway\"},inplace=True)\ndf3.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "hw1.html#page-2",
    "href": "hw1.html#page-2",
    "title": "INFO",
    "section": "3.(130page)",
    "text": "3.(130page)\n\ndf4=pd.read_csv('data/midwest.csv')\ndf4.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\nimport matplotlib.pyplot as plt\ndf4.rename(columns={\"poptotal\":\"total\",\"popasian\":\"asian\"},inplace=True)\ndf4['percent']=df4['asian']/df4['total'] *100\ndf4['percent'].plot.hist()\nplt.title(\"전체 인구 대비 아시아 인구 백분율\")\n\ndf4.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\npercent\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n\n\n5 rows × 29 columns\n\n\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 51204 (\\N{HANGUL SYLLABLE JEON}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 52404 (\\N{HANGUL SYLLABLE CE}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 48708 (\\N{HANGUL SYLLABLE BI}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 50500 (\\N{HANGUL SYLLABLE A}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 49884 (\\N{HANGUL SYLLABLE SI}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 48177 (\\N{HANGUL SYLLABLE BAEG}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 48516 (\\N{HANGUL SYLLABLE BUN}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 50984 (\\N{HANGUL SYLLABLE YUL}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 51204 (\\N{HANGUL SYLLABLE JEON}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 52404 (\\N{HANGUL SYLLABLE CE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48708 (\\N{HANGUL SYLLABLE BI}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 50500 (\\N{HANGUL SYLLABLE A}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49884 (\\N{HANGUL SYLLABLE SI}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48177 (\\N{HANGUL SYLLABLE BAEG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48516 (\\N{HANGUL SYLLABLE BUN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 50984 (\\N{HANGUL SYLLABLE YUL}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\n\nprint(f\"아시아 인구 백분율 전체 평균: {df4['percent'].mean()}\")\ndf4['large_small']=np.where(df4['percent'].mean()&gt;=df4['percent'],\"small\",\"large\")\ndf4.head()\n\n아시아 인구 백분율 전체 평균: 0.4872461834357345\n\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\npercent\nlarge_small\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n\n\n5 rows × 30 columns\n\n\n\n\ndf4_count=df4[\"large_small\"].value_counts()\ndf4_count\n\nlarge_small\nsmall    318\nlarge    119\nName: count, dtype: int64\n\n\n\ndf4_count.plot.bar(rot=0)\nplt.title(\"아시아 인구 평균 대비 빈도\",size=16)\nplt.ylabel(\"빈도수\")\n\nText(0, 0.5, '빈도수')\n\n\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 48712 (\\N{HANGUL SYLLABLE BIN}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 50500 (\\N{HANGUL SYLLABLE A}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 49884 (\\N{HANGUL SYLLABLE SI}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 44512 (\\N{HANGUL SYLLABLE GYUN}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\events.py:82: UserWarning: Glyph 48708 (\\N{HANGUL SYLLABLE BI}) missing from font(s) DejaVu Sans.\n  func(*args, **kwargs)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48712 (\\N{HANGUL SYLLABLE BIN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 50500 (\\N{HANGUL SYLLABLE A}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49884 (\\N{HANGUL SYLLABLE SI}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44512 (\\N{HANGUL SYLLABLE GYUN}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 48708 (\\N{HANGUL SYLLABLE BI}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)"
  },
  {
    "objectID": "index.html#homepage",
    "href": "index.html#homepage",
    "title": "HOME",
    "section": "",
    "text": "Hi, I’m Jiwon Choi\nCompute Tiger.\n====================================\n\n\npython \nRstudio\n\n\n\n\nADSP\nMOS MASTER\nComputer Specialist in Spreadsheet & Database Level-2\n\n\n\nText Mining"
  },
  {
    "objectID": "hw2.html",
    "href": "hw2.html",
    "title": "HW2",
    "section": "",
    "text": "1.144page\n\n자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. 배기량이 4 이하인 자동차와 5이상인 자동차 중 어떤 자동차의 고속도로 연비 평균이 더 높은지 알아보세요.\n\nimport pandas as pd\nimport numpy as np    \ndf=pd.read_csv('data/mpg.csv')\ndf_4=df.query(\"displ&lt;=4\")\ndf_5=df.query(\"displ&gt;=5\")\nprint(f\"displ이 4 이하인 자동차의 hwy 평균:{df_4['hwy'].mean()}\")\nprint(f\"displ이 5 이상인 자동차의 hwy 평균:{df_5['hwy'].mean()}\")\ndf_hwy=np.where(((df_4[\"hwy\"].mean())&gt;(df_5[\"hwy\"].mean())),\"displ이 4이하인 자동차의 평균이 더 높다\",\"displ이 5이상인 자동차의 평균이 더 높다.\")\nprint(df_hwy)\n\ndispl이 4 이하인 자동차의 hwy 평균:25.96319018404908\ndispl이 5 이상인 자동차의 hwy 평균:18.07894736842105\ndispl이 4이하인 자동차의 평균이 더 높다\n\n\n\n\n자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. audi와 toyota중 어느 자동차 제조 회사의 도시 연비 평균이 더 높은지 알아보세요.\n\ndf_audi=df.query(\"manufacturer=='audi'\")\ndf_toyota=df.query(\"manufacturer=='toyota'\")\nprint(f\"audi의 도시 연비 평균: {df_audi[\"cty\"].mean()}\")\nprint(f\"toyota의 도시 연비 평균: {df_toyota[\"cty\"].mean()}\")\ndf_max=np.where(((df_audi[\"cty\"].mean())&gt;(df_toyota[\"cty\"].mean())),\"audi의 평균이 더 높다\",\"toyota의 평균이 더 높다.\")\nprint(df_max)\n\naudi의 도시 연비 평균: 17.61111111111111\ntoyota의 도시 연비 평균: 18.529411764705884\ntoyota의 평균이 더 높다.\n\n\n\n\nchevrolet, ford, honda 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 의 전체 평균을 구해 보세요.\n\ndf_3car=df.query(\"manufacturer in ['chevrolet', 'ford', 'honda']\")\nprint(f\"세 자동차의 hwy 전체 평균: {df_3car['hwy'].mean()}\")\n\n세 자동차의 hwy 전체 평균: 22.50943396226415\n\n\n\n\n\n\n2.153page\n\naudi에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 한다.\n\n\naudi 에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\ndf.query(\"manufacturer=='audi'\").sort_values(\"hwy\",ascending=False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n\n\n\n\n\n\n\n\n\n\n\n3. 158page\n\nmpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.\n\ndf1=df.copy()\ndf1=df1.assign(cum_effi=df1['cty']+df1['hwy'])\ndf1.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ncum_effi\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n\n\n\n\n\n\n\n\n\n앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가해주세요.\n\ndf1=df1.assign(mean_effi=df1['cum_effi']/2)\ndf1.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ncum_effi\nmean_effi\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0\n\n\n\n\n\n\n\n\n\n’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.\n\ndf1.sort_values('mean_effi',ascending=False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ncum_effi\nmean_effi\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n\n\n\n\n\n\n\n1~3 번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 원본을 사용해 보세요.\n\ndf=df.assign(\n    cum_effi=df1['cty']+df1['hwy'],\n    mean_effi=df1['cum_effi']/2)\ndf1.sort_values('mean_effi',ascending=False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ncum_effi\nmean_effi\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "글 목록",
    "section": "",
    "text": "Homepage. blog\n\npython\n\nprint(\"big data \", 5+5)\n\nbig data  10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHW4\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 29, 2024\n\n\ntiger\n\n\n\n\n\n\n\n\n\n\n\n\nHW4\n\n\n\n\n\n\nscipy\n\n\n\n\n\n\n\n\n\nJul 25, 2024\n\n\ntiger\n\n\n\n\n\n\n\n\n\n\n\n\nHW0\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 22, 2024\n\n\ntiger\n\n\n\n\n\n\n\n\n\n\n\n\n교과서 Chapter 8\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 16, 2024\n\n\ntiger\n\n\n\n\n\n\n\n\n\n\n\n\nHW2\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 16, 2024\n\n\ntiger\n\n\n\n\n\n\n\n\n\n\n\n\nHW1\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 15, 2024\n\n\ntiger\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/hw2/index.html",
    "href": "posts/hw2/index.html",
    "title": "HW2",
    "section": "",
    "text": "1.144page\n\n자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. 배기량이 4 이하인 자동차와 5이상인 자동차 중 어떤 자동차의 고속도로 연비 평균이 더 높은지 알아보세요.\n\nimport pandas as pd\nimport numpy as np    \ndf=pd.read_csv('data/mpg.csv')\ndf_4=df.query(\"displ&lt;=4\")\ndf_5=df.query(\"displ&gt;=5\")\nprint(f\"displ이 4 이하인 자동차의 hwy 평균:{df_4['hwy'].mean()}\")\nprint(f\"displ이 5 이상인 자동차의 hwy 평균:{df_5['hwy'].mean()}\")\ndf_hwy=np.where(((df_4[\"hwy\"].mean())&gt;(df_5[\"hwy\"].mean())),\"displ이 4이하인 자동차의 평균이 더 높다\",\"displ이 5이상인 자동차의 평균이 더 높다.\")\nprint(df_hwy)\n\ndispl이 4 이하인 자동차의 hwy 평균:25.96319018404908\ndispl이 5 이상인 자동차의 hwy 평균:18.07894736842105\ndispl이 4이하인 자동차의 평균이 더 높다\n\n\n\n\n자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. audi와 toyota중 어느 자동차 제조 회사의 도시 연비 평균이 더 높은지 알아보세요.\n\ndf_audi=df.query(\"manufacturer=='audi'\")\ndf_toyota=df.query(\"manufacturer=='toyota'\")\nprint(f\"audi의 도시 연비 평균: {df_audi[\"cty\"].mean()}\")\nprint(f\"toyota의 도시 연비 평균: {df_toyota[\"cty\"].mean()}\")\ndf_max=np.where(((df_audi[\"cty\"].mean())&gt;(df_toyota[\"cty\"].mean())),\"audi의 평균이 더 높다\",\"toyota의 평균이 더 높다.\")\nprint(df_max)\n\naudi의 도시 연비 평균: 17.61111111111111\ntoyota의 도시 연비 평균: 18.529411764705884\ntoyota의 평균이 더 높다.\n\n\n\n\nchevrolet, ford, honda 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 의 전체 평균을 구해 보세요.\n\ndf_3car=df.query(\"manufacturer in ['chevrolet', 'ford', 'honda']\")\nprint(f\"세 자동차의 hwy 전체 평균: {df_3car['hwy'].mean()}\")\n\n세 자동차의 hwy 전체 평균: 22.50943396226415\n\n\n\n\n\n\n2.153page\n\naudi에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 한다.\n\n\naudi 에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\ndf.query(\"manufacturer=='audi'\").sort_values(\"hwy\",ascending=False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact\n\n\n\n\n\n\n\n\n\n\n\n3. 158page\n\nmpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.\n\ndf1=df.copy()\ndf1=df1.assign(cum_effi=df1['cty']+df1['hwy'])\ndf1.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ncum_effi\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n\n\n\n\n\n\n\n\n\n앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가해주세요.\n\ndf1=df1.assign(mean_effi=df1['cum_effi']/2)\ndf1.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ncum_effi\nmean_effi\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0\n\n\n\n\n\n\n\n\n\n’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.\n\ndf1.sort_values('mean_effi',ascending=False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ncum_effi\nmean_effi\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n\n\n\n\n\n\n\n1~3 번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 원본을 사용해 보세요.\n\ndf=df.assign(\n    cum_effi=df1['cty']+df1['hwy'],\n    mean_effi=df1['cum_effi']/2)\ndf1.sort_values('mean_effi',ascending=False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ncum_effi\nmean_effi\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/hw1/index.html",
    "href": "posts/hw1/index.html",
    "title": "HW1",
    "section": "",
    "text": "1.(84page)\n\n다음 표의 내용을 데이터 프레임으로 만들어 출력해보세요.\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n\n\ndf1=pd.DataFrame({\n    \"제품\":[\"사과\",\"딸기\",\"수박\"],\n    \"가격\":[1800,1500,3000],\n    \"판매량\":[24,38,13]})\ndf1\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\n\n앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해보세요.\n\nprint(f\"과일 가격 평균:{df1[\"가격\"].mean()}, 과일 판매량 평균:{df1[\"판매량\"].mean()}\")\n\n과일 가격 평균:2100.0, 과일 판매량 평균:25.0\n\n\n\n\n\n2.(115page)\n\nmpg 데이터를 불러와 복사본을 만드세요.\n\ndf2=pd.read_csv('data/mpg.csv')\ndf3=df2.copy()\ndf3.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\n\n데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\ndf3.rename(columns={\"cty\":\"city\",\"hwy\":\"highway\"},inplace=True)\ndf3.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n\n3.(130page)\n\nmidwest.csv를 불러와 데이터의 특징을 파악하세요.\n\ndf4=pd.read_csv('data/midwest.csv')\ndf4.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\n\npoptotal 변수를 total로, popasian 변수를 asian으로 수정하세요.\n\n\ntotal, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nimport matplotlib.pyplot as plt\ndf4.rename(columns={\"poptotal\":\"total\",\"popasian\":\"asian\"},inplace=True)\ndf4['percent']=df4['asian']/df4['total'] *100\ndf4['percent'].plot.hist()\nplt.title(\"Total Population\")\n\ndf4.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\npercent\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n\n\n5 rows × 29 columns\n\n\n\n\n\n\n\n\n\n\n\n\n아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어보세요.\n\nprint(f\"아시아 인구 백분율 전체 평균: {df4['percent'].mean()}\")\ndf4['large_small']=np.where(df4['percent'].mean()&gt;=df4['percent'],\"small\",\"large\")\ndf4.head()\n\n아시아 인구 백분율 전체 평균: 0.4872461834357345\n\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\npercent\nlarge_small\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n\n\n5 rows × 30 columns\n\n\n\n\n\n’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\ndf4_count=df4[\"large_small\"].value_counts()\ndf4_count\n\nlarge_small\nsmall    318\nlarge    119\nName: count, dtype: int64\n\n\n\ndf4_count.plot.bar(rot=0)"
  },
  {
    "objectID": "posts/ch8/index.html",
    "href": "posts/ch8/index.html",
    "title": "교과서 Chapter 8",
    "section": "",
    "text": "read_csv\n\nimport pandas as pd\nimport matplotlib.pyplot as plt    \nimport seaborn as sns    \nmpg=pd.read_csv('data/mpg.csv')\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\nscatterplot\n\nseaborn 을 사용한 산점도\n\n\nsns.scatterplot(data=mpg,x=\"displ\",y=\"hwy\",hue=\"drv\").set(xlim=[3,6], ylim=[10,30])\n#plt.figure(figsize=(8,7))\nplt.show()\n\n\n\n\n\n\n\n\n\nplotly 를 사용한 산점도\n\n\nimport plotly.express as px\npx.scatter(data_frame=mpg, x='cty',y='hwy',color='drv')\n\n                                                \n\n\n\n\nbarplot\n\ndf_mpg=mpg.groupby(\"drv\", as_index=False).agg(mean_hwy=('hwy','mean'))\nsns.barplot(data=df_mpg, x=\"drv\",y=\"mean_hwy\",hue=\"drv\")\n\n\n\n\n\n\n\n\n\n\ngroupby & barplot\n\ndf_mpg= df_mpg.sort_values(\"mean_hwy\",ascending=False)\n#208page\ndf_mpg=mpg.groupby(\"drv\",as_index=False) \\\n          .agg(n=(\"drv\",\"count\"))    \nsns.barplot(df_mpg,x=\"drv\",y='n',hue=\"drv\")\n\n\n\n\n\n\n\n\n\n\ncountplot\n\nsns.countplot(mpg,x='drv',order=['4','f','r'])"
  },
  {
    "objectID": "posts/hw3/index.html",
    "href": "posts/hw3/index.html",
    "title": "HW4",
    "section": "",
    "text": "문제 1\n\n정규분포 pdf 값을 계산하는 자신만의 파이썬 함수를 정의하고 정규분포 mu = 3, sigma = 2 의 pdf를 그릴 것.\n\nimport pandas as pd\nimport numpy as np    \nfrom scipy.stats import norm\nimport matplotlib.pyplot as plt    \nimport seaborn as sns    \n\ndef my_norm(x,mu,sigma):\n    #x=np.linspace(-10,10,500)\n    y=norm.pdf(x, loc=mu, scale= sigma)\n    plt.plot(x,y,color=\"red\")\n    plt.show()\nmy_norm(np.linspace(-9,15,500),3,2)\n\n\n\n\n\n\n\n\n\n\n\n\n문제 2\n\n파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오.\nX ~ N(2, 3^2)\n\n\nP(X &lt; 3)\n\n\n\nfrom scipy import *\na=norm.cdf(3,loc=2,scale=3)\nprint(f\"정규분포 N(2, 3^2)를 따르는 X의 P(X &lt; 3) 는 {a}\")\n\n정규분포 N(2, 3^2)를 따르는 X의 P(X &lt; 3) 는 0.6305586598182363\n\n\n\n\nP(2 &lt; X &lt; 5)\n\n\n\nb=norm.cdf(5,loc=2,scale=3)-norm.cdf(2,loc=2,scale=3)\nprint(f\"정규분포 N(2, 3^2)를 따르는 X의 P(2 &lt; X &lt; 5) 는 {b}\")\n\n정규분포 N(2, 3^2)를 따르는 X의 P(2 &lt; X &lt; 5) 는 0.3413447460685429\n\n\n\n\nP(X &lt; 3 or X &gt; 7)\n\n\n\nc=1-norm.cdf(7,loc=2,scale=3)+norm.cdf(3,loc=2,scale=3)\nprint(f\"정규분포 N(2, 3^2)를 따르는 X의 P(X &lt; 3 or X &gt; 7) 는 {c}\")\n\n정규분포 N(2, 3^2)를 따르는 X의 P(X &lt; 3 or X &gt; 7) 는 0.678349012091051\n\n\n\n\n\n\n문제 3\n\nLS 빅데이터 스쿨 학생들의 중간고사 점수는 평균:30, 분산:4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?\n\n# 상위 0.05= 하위 0.95 이므로\nexam=norm.ppf(0.95,30,2)\nprint(f\"상위5%에 해당하는 학생의 점수는 {exam} 점 이다.\")\n\n상위5%에 해당하는 학생의 점수는 33.28970725390295 점 이다.\n\n\n\nexam=norm.ppf(0.95,30,2)\nx=norm.pdf(np.linspace(20,40,200),loc=30,scale=2)\nplt.axvline(x=exam, color=\"blue\",linestyle=\"--\",linewidth=3)\nplt.plot(np.linspace(20,40,200),x)\nplt.show()"
  },
  {
    "objectID": "posts/hw4/index.html",
    "href": "posts/hw4/index.html",
    "title": "HW4",
    "section": "",
    "text": "표본 분산 계산 시 왜 n-1로 나누는지 알아보도록 하겠습니다. 균일분포 (3, 7)에서 20개의 표본을 뽑아서 분산을 2가지 방법으로 추정해보세요."
  },
  {
    "objectID": "posts/hw0/index.html",
    "href": "posts/hw0/index.html",
    "title": "HW0",
    "section": "",
    "text": "204page\n\nQ1\nmpg데이터의 cty와 hwy간의 어떤 관계가 있는지 알아보려고 합니다. \nx축은 cty, y축은 hwy로 된 산점도를 만들어 보세요.\n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nmpg=pd.read_csv('data/mpg.csv')\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\nsns.scatterplot(mpg, x=\"cty\",y=\"hwy\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\nQ2\n미국의 지역별 인구통계 정보를 담은 midwest.csv 를 이용해 전체 인구와 아시아인 \n인구 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 poptotal, y축은 popasian으로 된 \n산점도를 만들어 보세요. 전체 인구는 50만 명 이하, 아시아인 인구는 1만 면 이하인 지역만 \n산점도에 표시되게 설정하세요. \n\nmidwest=pd.read_csv('data/midwest.csv ')\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\nsns.scatterplot(midwest, x=\"poptotal\", \n                         y=\"popasian\").set(xlim=[0,500000],ylim=[0,10000])\n\n\n\n\n\n\n\n\n\n\n\n\n211 page\n\nQ1\n어떤 회사에서 생산한 suv 차종의 도시 연비가 높은지 알아보려고 합니다. \nsuv 차종을 대상으로 cty 평균이 가장 높은 회사 다섯 곳을 막대그래프로 표현해 보세요. \n막대는 연비가 높은 순으로 정렬하세요. \n\nplt.clf()\nmpg_suv=mpg.query('category==\"suv\"').groupby('manufacturer')[\"cty\"].mean().sort_values(ascending=False).head()\nsns.barplot(mpg_suv)\nplt.show()\n\n\n\n\n\n\n\n\n\n\nQ2\n자동차 중에 어떤 category가 많은지 알아보려고 합니다. sns.barplot() 을 이용해 자동차 종류별 빈도를 표현한 막대그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요. \n\nplt.clf()\nmpg_c=mpg.groupby('category')['category'].count().sort_values(ascending=False)\nsns.barplot(mpg_c).set(ylim=[0,100])\nplt.xticks(rotation=45)\nplt.title(\"Frequency barplot by category\")\nplt.show()"
  },
  {
    "objectID": "posts/hw4/index.html#각-분포-그래프에-모분산의-위치에-녹색-막대를-그려주세요.",
    "href": "posts/hw4/index.html#각-분포-그래프에-모분산의-위치에-녹색-막대를-그려주세요.",
    "title": "HW4",
    "section": "2. 각 분포 그래프에 모분산의 위치에 녹색 막대를 그려주세요.",
    "text": "2. 각 분포 그래프에 모분산의 위치에 녹색 막대를 그려주세요.\n\nvar=((7-3)**2)/12\nplt.axvline(var, color = 'green', linestyle = '-',  linewidth = 3)\nsns.histplot(data=s_2, color=\"red\")\nplt.show()\nprint(\"n-1로 나눈 것\")\n\n\n\n\n\n\n\n\nn-1로 나눈 것\n\n\n\nplt.axvline(var, color = 'green', linestyle = '-',  linewidth = 3)\nsns.histplot(data=k_2, color=\"y\")\nplt.show()\nprint(\"n으로 나눈 것\")\n\n\n\n\n\n\n\n\nn으로 나눈 것"
  },
  {
    "objectID": "posts/hw4/index.html#결과를-살펴보고-왜-n-1로-나눈-것을-분산을-추정하는-지표로",
    "href": "posts/hw4/index.html#결과를-살펴보고-왜-n-1로-나눈-것을-분산을-추정하는-지표로",
    "title": "HW4",
    "section": "3. 결과를 살펴보고, 왜 n-1로 나눈 것을 분산을 추정하는 지표로",
    "text": "3. 결과를 살펴보고, 왜 n-1로 나눈 것을 분산을 추정하는 지표로"
  },
  {
    "objectID": "posts/hw4/index.html#사용하는-것이-타당한지-써주세요",
    "href": "posts/hw4/index.html#사용하는-것이-타당한지-써주세요",
    "title": "HW4",
    "section": "사용하는 것이 타당한지 써주세요!",
    "text": "사용하는 것이 타당한지 써주세요!\n\nplt.axvline(var, color = 'green', linestyle = '-',  linewidth = 3)\nsns.histplot(data=s_2, color=\"red\")\nsns.histplot(data=k_2, color=\"y\")\nplt.show()"
  },
  {
    "objectID": "posts/hw4/index.html#n-1로-나눈-것을-s_2-n으로-나눈-것을-k_2로-정의하고-s_2의-분포와-k_2의-분포를-그려주세요-10000개-사용",
    "href": "posts/hw4/index.html#n-1로-나눈-것을-s_2-n으로-나눈-것을-k_2로-정의하고-s_2의-분포와-k_2의-분포를-그려주세요-10000개-사용",
    "title": "HW4",
    "section": "1. n-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고, s_2의 분포와 k_2의 분포를 그려주세요! (10000개 사용)",
    "text": "1. n-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고, s_2의 분포와 k_2의 분포를 그려주세요! (10000개 사용)\n\nimport numpy as np    \nimport pandas as pd\nimport matplotlib.pyplot as plt    \nimport seaborn as sns    \n\ns_2=[]\nk_2=[]\n\nfor i in range(10000):\n    a=np.random.uniform(3,7,20)\n    b=sum((a-a.mean())**2)\n    c_1=b/(len(a)-1)\n    c=b/(len(a))\n    s_2.append(c_1)\n    k_2.append(c)\nsns.histplot(data=s_2, color=\"red\")\nsns.histplot(data=k_2, color=\"y\")\nplt.show()"
  }
]