---
title: "LS bigdata school HW2"
author: "tiger"
date: "2024-07-16"
categories: [bigdata]
---
---
title: "HW2"
jupyter: python3
---
# 1.144page   


#### 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. 배기량이 4 이하인 자동차와 5이상인 자동차 중 어떤 자동차의 고속도로 연비 평균이 더 높은지 알아보세요. 
```{python}
import pandas as pd
import numpy as np    
df=pd.read_csv('data/mpg.csv')
df_4=df.query("displ<=4")
df_5=df.query("displ>=5")
print(f"displ이 4 이하인 자동차의 hwy 평균:{df_4['hwy'].mean()}")
print(f"displ이 5 이상인 자동차의 hwy 평균:{df_5['hwy'].mean()}")
df_hwy=np.where(((df_4["hwy"].mean())>(df_5["hwy"].mean())),"displ이 4이하인 자동차의 평균이 더 높다","displ이 5이상인 자동차의 평균이 더 높다.")
print(df_hwy)
```


#### 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. audi와 toyota중 어느 자동차 제조 회사의 도시 연비 평균이 더 높은지 알아보세요. 
```{python}
df_audi=df.query("manufacturer=='audi'")
df_toyota=df.query("manufacturer=='toyota'")
print(f"audi의 도시 연비 평균: {df_audi["cty"].mean()}")
print(f"toyota의 도시 연비 평균: {df_toyota["cty"].mean()}")
df_max=np.where(((df_audi["cty"].mean())>(df_toyota["cty"].mean())),"audi의 평균이 더 높다","toyota의 평균이 더 높다.")
print(df_max)
```


#### chevrolet, ford, honda 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 의 전체 평균을 구해 보세요. 

```{python}
df_3car=df.query("manufacturer in ['chevrolet', 'ford', 'honda']")
print(f"세 자동차의 hwy 전체 평균: {df_3car['hwy'].mean()}")
```

***

# 2.153page
#### audi에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 한다.       
#### audi 에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요. 
```{python}
df.query("manufacturer=='audi'").sort_values("hwy",ascending=False).head()
```

***

# 3. 158page
#### mpg 데이터 복사본을 만들고, cty와 hwy를 더한 '합산 연비 변수'를 추가하세요. 
```{python}
df1=df.copy()
df1=df1.assign(cum_effi=df1['cty']+df1['hwy'])
df1.head()
```
#### 앞에서 만든 '합산 연비 변수'를 2로 나눠 '평균 연비 변수'를 추가해주세요.
```{python}
df1=df1.assign(mean_effi=df1['cum_effi']/2)
df1.head()
```
#### '평균 연비 변수'가 가장 높은 자동차 3종의 데이터를 출력하세요.
```{python}
df1.sort_values('mean_effi',ascending=False).head(3)

```

#### 1~3 번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 원본을 사용해 보세요.
```{python}
df=df.assign(
    cum_effi=df1['cty']+df1['hwy'],
    mean_effi=df1['cum_effi']/2)
df1.sort_values('mean_effi',ascending=False).head(3)
```

